openapi: "3.0.0"
servers:
  - url: https://api.coinform.eu/
    description: The Gateway API server adress 
info:
  description: |
    This document describes the API exposed by Co-Inform's Misinformation Detection Modules Gateway.
    This Gateway is the single point of entrance of all the requests made by Co-Inform's Browser Plugin.
  version: "0.0.1"
  title: "[Draft] Co-Inform Gateway API"
paths:
  /twitter/user:
    post:
      tags:
      - "Browser Plugin"
      summary: "Check a twitter user"
      description: "Sends a twitter user to be checked and return a 'query id'"
      operationId: "twitterUser"
      requestBody:
        description: "A twitter user"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TwitterUser"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryResponse"
        400:
          description: "Invalid input"
  /twitter/tweet:
    post:
      tags:
      - "Browser Plugin"
      summary: "Check a tweet"
      description: "Sends a tweet to be checked and gives back a 'query id'"
      operationId: "checkSource"
      requestBody:
        description: "A tweet"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tweet"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryResponse"
        400:
          description: "Invalid input"
  /response/{query_id}:
    get:
      tags:
      - "Browser Plugin"
      summary: "Get a response from a query"
      description: "Get the request from a previous query"
      operationId: "requestQueryId"
      parameters:
      - name: "query_id"
        in: "path"
        description: "the query_id given by an previous query"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryResponse"
        404:
          description: "no such query_id"
  /module/response/{transaction_id}:
    post:
      tags: 
      - "Modules"
      summary: "post a finished module query"
      description: "Post a finished query"
      parameters:
      - in: "path"
        name: "transaction_id"
        description: "the transaction_id given by the gateway at the post of the query"
        required: true
        schema:
          type: "string"
      requestBody:
        description: "Module query response"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModuleResponse"
      responses:
        200:
          description: "successful operation"
#       401:
#         description: "unauthorized operation"
        404:
          description: "no such transaction_id"
components:
  schemas:
    QueryId:
      type: "string"
    QueryStatus:
      type: "string"
      enum:
        - "done"
        - "partly_done"
        - "in_progress"
    TwitterUser:
      type: "object"
      properties:
        user_id:
          type: "string"
        screen_name:
          type: "string"
    Tweet:
      type: "object"
      properties:
        tweet_id:
          type: "string"
        tweet_author:
          type: "string"
        tweet_text:
          type: "string"
        tweet_urls:
          type: array
          items:
            type: "object"
            properties:
              text_url:
                type: "string"
                description: "URL that appears in 'tweet_text'"
              effective_url:
                type: "string"
                description: "Value of the HREF element in the HTML"
    QueryResponse:
      type: "object"
      properties:
        query_id:
          $ref: "#/components/schemas/QueryId"
        status:
          $ref: "#/components/schemas/QueryStatus"
        response:
          type: "object"
    ModuleResponse:
      type: "object"
      properties:
        response:
          type: "object"
